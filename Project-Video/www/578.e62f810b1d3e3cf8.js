"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[578],{578:(w,s,t)=>{t.r(s),t.d(s,{Network:()=>l,NetworkWeb:()=>i});var c=t(7036),r=t(2956);function a(){const o=window.navigator.connection||window.navigator.mozConnection||window.navigator.webkitConnection;let e="unknown";const n=o?o.type||o.effectiveType:null;if(n&&"string"==typeof n)switch(n){case"bluetooth":case"cellular":case"slow-2g":case"2g":case"3g":e="cellular";break;case"none":e="none";break;case"ethernet":case"wifi":case"wimax":case"4g":e="wifi";break;case"other":case"unknown":e="unknown"}return e}class i extends r.Uw{constructor(){super(),this.handleOnline=()=>{const e=a();this.notifyListeners("networkStatusChange",{connected:!0,connectionType:e})},this.handleOffline=()=>{this.notifyListeners("networkStatusChange",{connected:!1,connectionType:"none"})},typeof window<"u"&&(window.addEventListener("online",this.handleOnline),window.addEventListener("offline",this.handleOffline))}getStatus(){var e=this;return(0,c.Z)(function*(){if(!window.navigator)throw e.unavailable("Browser does not support the Network Information API");const n=window.navigator.onLine,u=a();return{connected:n,connectionType:n?u:"none"}})()}}const l=new i}}]);